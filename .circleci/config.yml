version: 2.1
executors:
  docker-executor:
    environment:
      IMAGE_NAME: trusty-gcloud
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest . --label "org.opencontainers.image.version=${CIRCLE_TAG/v/''}"
      - run:
          name: Cache Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-docker-image:
    parameters:
      image-name:
        type: string
      registry-login-steps:
        type: steps
        default:
          - run: echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    executor: docker-executor
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load cached Docker image
          command: docker load -i /tmp/workspace/image.tar
      - steps: << parameters.registry-login-steps >>
      - run:
          name: Publish Docker image to registry
          command: |
            IMAGE_VERSION=${CIRCLE_TAG/v/''}
            docker tag $IMAGE_NAME:latest << parameters.image-name >>:latest
            docker tag $IMAGE_NAME:latest << parameters.image-name >>:$IMAGE_VERSION
            docker push << parameters.image-name >>:latest
            docker push << parameters.image-name >>:$IMAGE_VERSION
            # If the minor version can be extracted then tag and push
            MINOR_VERSION=$(echo $CIRCLE_TAG | sed -n "s/^v\([0-9]*.[0-9]*\).[0-9]*$/\1/p")
            if [[ ${#MINOR_VERSION} -gt 0 ]]; then
              docker tag $IMAGE_NAME:latest << parameters.image-name >>:$MINOR_VERSION
              docker push << parameters.image-name >>:$MINOR_VERSION
            fi
            docker images
workflows:
  version: 2
  build:
    jobs:
      - build
  build-and-publish-tags:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-docker-image:
          context: org-global
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          image-name: "peterevans/$IMAGE_NAME"
      - publish-docker-image:
          context: org-global
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          image-name: "docker.pkg.github.com/peter-evans/$IMAGE_NAME"
          registry-login-steps:
            - run: echo "$GITHUB_PKG_REG_TOKEN" | docker login docker.pkg.github.com -u "peter-evans" --password-stdin
